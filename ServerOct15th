

//import all classes from both packages using *
import java.io.*;//used to process input (texts/binary files) & the output (java files)
import java.net.*;//provides classes/interfaces for networking

public class Server
{

    //declaration of 4 objects--instances of the classes specified
    ServerSocket serverSock;
    Socket clientSock;
    DataInputStream dataIn;
    DataOutputStream dataOut;

    public static void main(String args[])
    {
        new Server();
    }

    public Server()
    {
        try
        {
            System.out.println(InetAddress.getLocalHost());
            System.out.println("Server Started");

            //we are not root users in the school system so we must use a port higher than 1025
            serverSock = new ServerSocket(8372);
            clientSock = serverSock.accept(); //accept the socket
            System.out.println(clientSock);
            System.out.println("CLIENT CONNECTED");

            dataIn = new DataInputStream(clientSock.getInputStream());
            dataOut = new DataOutputStream(clientSock.getOutputStream());

            /*creates a chat object from class ServerChat--which has implemented an Interface called Runnable.
            Runnable is an interface whose instances can run as a Thread.
            we can't extend more than 1 class using Thread; Runnable enables multiple-inheritance*/
            ServerChat chat = new ServerChat(dataOut, dataIn);

            /*create an object of class Thread--a class which has implemented Runnable--and
            pass chat object of class ServerChat to it--a class which has implemented Runnable too.*/
            Thread thread1 = new Thread(chat);

            thread1.start();//Causes this thread to begin execution; the JVM calls the run method of this thread

        }

        catch (Exception e)
        {
            System.out.println(e);
        }
    }

}


//*******************************************************in another java file**************************************
import java.io.*;

public class ServerChat implements Runnable
{
    public DataInputStream dataIn;
    public DataOutputStream dataOut;

    //the constructor(ServerChat bellow) assigns passed parameters to 2 instance variable
    public ServerChat(DataOutputStream dataOut, DataInputStream dataIn)
    {
        this.dataIn = dataIn;
        this.dataOut = dataOut;
    }

    public void run()
    {
        String clientMsg, serverMsg;
        try
        {

            do {
                clientMsg = dataIn.readUTF(); //readUTF, built in method that reads the data from the stream
                System.out.println("Client Message" + clientMsg); //prints the steam

                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
                serverMsg = bufferedReader.readLine();
                dataOut.writeUTF(serverMsg);
                dataOut.flush();
            } while (!serverMsg.equals("bye"));

        }
        catch (Exception e)
        {
            System.out.println("ERROR!" + e);
        }

    }
}



